name: CI
on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["*"]

env: 
  JAVA_OPTS: "-Xmx4G"
  JVM_OPTS: "-Xmx4G"
  SBT_OPTS: "-Xmx4G"

jobs:
  build:
    name: Unix CI ${{ matrix.os }} 
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' 
          java-version: 17
          cache: sbt
      
      - name: Tests
        run: sbt test scripted publishLocal versionDump

      - name: Cold start tests (docker)
        run: docker build . -t sbt-vcpkg-tests
        if: startsWith(matrix.os, 'ubuntu-')

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/sbt-vcpkg/vcpkg-install
            ~/.cache/sbt-vcpkg/vcpkg-install
            ~/.cache/sbt-vcpkg/vcpkg
          key: ${{ runner.os }}-sbt-vcpkg

      - name: Run example
        env:
          LLVM_BIN: /usr/local/opt/llvm/bin  
        if: startsWith(matrix.os, 'macos-')
        run: |
          set -e
          brew install llvm
          cd example 
          SBT_VCPKG_VERSION=$(cat ../version) sbt example/run

      - name: CLI tests
        shell: bash
        run: |
          set -e
          
          curl -fLo cs https://github.com/coursier/launchers/raw/master/coursier &&
          chmod +x cs
          
          ./cs launch com.indoorvivants.vcpkg:scala-vcpkg_3:$(cat version) -- install -v libpq s2n

          echo '{"name": "my-application","version": "0.15.2","dependencies": ["sqlite3"]}' > test-vcpkg.json
          ./cs launch com.indoorvivants.vcpkg:scala-vcpkg_3:$(cat version) -- install-manifest -v test-vcpkg.json
          

  windows_build:
    name: Windows CI
    strategy:
      fail-fast: false
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3

      - name: Setup git config
        run: git config --global core.autocrlf false

      - name: Install pkg-config on Windows
        run: choco install pkgconfiglite
      
      # - name: Configure Pagefile
      #   uses: al-cheb/configure-pagefile-action@v1.2
      #   with:
      #     minimum-size: 4GB
      #     maximum-size: 16GB
      #   if: runner.os == 'Windows'
      
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' 
          java-version: 17
          cache: sbt
      
      - name: Test
        run: sbt test

  summary:
    name: Build summary
    runs-on: ubuntu-latest
    needs: [build, windows_build]
    steps:
      - name: I only exist to please Mergify :(
        run: echo "It's a sad existence but necessary"

  release:
    name: Release
    needs: [build, windows_build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' 
          java-version: '11'
          cache: sbt

      - name: Publish ${{ github.ref }}
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
